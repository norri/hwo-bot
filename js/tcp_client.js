// Generated by CoffeeScript 1.3.3
(function() {
  var Binary, Client, Net, root,
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  Net = require('net');

  Binary = require('binary');

  Client = (function() {

    function Client(host, port) {
      this.bindToSocket = __bind(this.bindToSocket, this);

      var socket,
        _this = this;
      socket = Net.createConnection(port, host);
      socket.on('connect', function() {
        socket.setKeepAlive(true);
        socket.setNoDelay(true);
        _this.bindToSocket(socket);
        return _this.onConnect(socket);
      });
    }

    Client.prototype.bindToSocket = function(socket) {
      var self;
      socket.on('end', this.onDisconnect);
      self = this;
      return Binary.stream(socket).loop(function() {
        return this.scan('message', '\n').tap(function(stash) {
          return self.onMessage(JSON.parse(stash.message), socket);
        });
      });
    };

    Client.prototype.respond = function(message, socket) {
      return socket.write("" + (JSON.stringify(message)) + "\n");
    };

    return Client;

  })();

  root = typeof exports !== "undefined" && exports !== null ? exports : this;

  root.Client = Client;

}).call(this);
