// Generated by CoffeeScript 1.3.3
(function() {
  var Paddle, chai, expect;

  Paddle = require('../src/paddle').Paddle;

  chai = require('chai');

  expect = chai.expect;

  describe('Paddle', function() {
    var paddle;
    paddle = null;
    beforeEach(function() {
      return paddle = new Paddle(0, 50, 10);
    });
    it('default y-position should be 0', function() {
      return expect(paddle.y).to.equal(0);
    });
    it('default direction should be 0', function() {
      return expect(paddle.direction).to.equal(0);
    });
    it('update should update position', function() {
      paddle.update(2, 1);
      return expect(paddle.y).to.equal(2);
    });
    describe('movement', function() {
      it('should go up if ball is coming upper than paddle', function() {
        paddle.update(20, 1);
        paddle.moveToCenter(0);
        return expect(paddle.direction).to.equal(-1);
      });
      it('should go down if ball is coming lower than paddle', function() {
        paddle.update(5, 1);
        paddle.moveToCenter(20);
        return expect(paddle.direction).to.equal(1);
      });
      return it('should stop if ball is coming towards paddle', function() {
        paddle.update(5, 1);
        paddle.moveToCenter(6);
        return expect(paddle.direction).to.equal(0);
      });
    });
    return describe('max speed', function() {
      it('max speed should be 15 as default', function() {
        return expect(paddle.maxSpeed).to.equal(15);
      });
      return it('max speed should be updated if bigger than last one', function() {
        paddle.update(20, 1);
        expect(paddle.maxSpeed).to.equal(20);
        paddle.update(4, 1);
        return expect(paddle.maxSpeed).to.equal(20);
      });
    });
  });

}).call(this);
